{"version":3,"sources":["assets/aboutme.jpg","assets/projects.jpg","assets/contact.jpg","assets/me.jpg","theme/media.js","theme/grid.js","components/AboutMe.js","theme/variables.js","components/Project.js","components/Contact.js","components/Home.js","components/NavigationBar.js","theme/globalStyles.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sizes","phone","tablet","desktop","giant","media","css","_templateObject","apply","arguments","Div","styled","div","grid_templateObject","_ref","marginButtom","_templateObject2","Container","_templateObject3","_templateObject4","Flex","_templateObject5","_ref2","column","_templateObject6","_ref3","justify","_templateObject7","_ref4","align","_templateObject8","Title","h1","AboutMe_templateObject","AboutMeImage","AboutMe_templateObject2","require","AboutMe","Link","AboutMe_templateObject3","react_default","a","createElement","Component","ProjectsImage","Project_templateObject","Detail","Project_templateObject2","Project","to","ContactImage","Contact_templateObject","HomeImage","Home_templateObject","Home","NavigationContainer","NavigationBar_templateObject","NewItem","NavigationBar_templateObject2","NavigationBar","GlobalStyle","createGlobalStyle","globalStyles_templateObject","App","components_NavigationBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf2e3a82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aboutme.e688b756.jpg\";","module.exports = __webpack_public_path__ + \"static/media/projects.73fbea52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact.6805e4a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me.85b319dc.jpg\";","import { css } from 'styled-components';\n\nconst sizes = {\n    phone: 376,\n    tablet: 768,\n    desktop: 992,\n    giant: 1170\n};\n\n// const media = Object.keys[sizes].reduce[(finalMedial, size) => {\n//     return {\n//         ...finalMedial,\n//         [size]: function phone(...args){\n//             return css`\n//             @media(max-width: ${sizes[size]}px){\n//                 ${css(...args)}\n//             }\n//         `;            \n//         }\n//     };\n// }, {}];\n\nfunction phone(...args){\n    return css`\n        @media(max-width: ${sizes.phone}px){\n            ${css(...args)}\n        }\n    `;\n};\n\nconst media = {\n    phone\n};\n\nexport default media;","import styled, { css } from 'styled-components';\nimport media from '../theme/media';\n\nexport const Div = styled.div`\n    ${({ marginButtom }) => marginButtom && css`\n        margin-buttom: ${marginButtom};\n    `}\n`\n\nexport const Container =  styled(Div)`\n    margin-left: 0px;\n    padding-left: 0px;\n    padding-right: 0px;\n    padding-top: 0px;\n    ${media.phone`\n        padding-left: 30px;\n        padding-right: 30px;\n        padding-top: 15px;\n    `}\n`;\n\nexport const Flex = styled(Div)`\n    display: flex;\n\n    ${({ column }) => column && css`\n        column-direction: ${column};\n    `}\n\n    ${({ justify }) => justify && css`\n        justify-content: ${justify};\n    `}\n\n\n    ${({ align }) => align && css`\n        align-content: ${align};\n    `}\n`;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Container, Relative, Flex  } from '../theme/grid';\nimport { Link } from 'react-router-dom';\n//import Button from '@material-ui/core/Button';\n//import CardActions from '@material-ui/core/CardActions';\nimport { white } from '../theme/variables';\n\nexport const Title = styled.h1`\n    margin-top: 0;\n    color: ${white};\n`;\n\nexport const AboutMeImage = styled.div`\n    height: 100vh;\n    background-image: url('${require('../assets/aboutme.jpg')}');\n    background-position: center center;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    justify-content: center;\n\n    text-align: center;\n    color: white;\n\n    font-size: 1em;\n\n    h1 {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Item = styled(Link)`\n  color: white;\n  font-size:  1.5em;\n  display:  block;\n  width:  150px;\n  padding-top:  10px;\n  padding-bottom: 10px;\n  text-align: center;\n  border: 2px solid;\n  border-color: #aaaaaa #444444 #444444 #aaaaaa;\n`;\n\nclass AboutMe extends Component {\n  render() {\n    return (\n    <Container>\n      <AboutMeImage>\n        {/* <Flex justify={'left'}> */}\n        {/* <p align=\"right\">Hi, Im Lemon! Im a developer in Tokyo. </p> */}\n        {/* </Flex> */}\n        <Title>Skills</Title>\n        <p>HTML5 / CSS3, JavaScript, python, Bootstrap, SCSS/Sass, Git, Linux, Ruby on rails</p>\n      {/* <Flex justify={'center'}>\n      <Item to={'/aboutMe'}>About Me</Item>\n      </Flex> */}\n        <Title>Contact</Title>\n        <p>info@lemon.me</p>\n      </AboutMeImage>\n    </Container>\n    );\n  }\n}\n\nexport default AboutMe;","export const white = '#ffffff'\nexport const black = '#000000'","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Container, Relative, Flex  } from '../theme/grid';\nimport { Link } from 'react-router-dom';\n\nexport const ProjectsImage = styled.div`\n    height: 100vh;\n    background-image: url('${require('../assets/projects.jpg')}');\n    background-position: center center;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    justify-content: center;\n\n    text-align: center;\n    color: white;\n\n    font-size: 1em;\n\n    h1 {\n        margin-bottom: 0;\n    }\n`;\n\nexport const Detail = styled(Link)`\n  color: white;\n  font-size:  0.8em;\n  display:  block;\n  width:  150px;\n  padding-top:  10px;\n  padding-bottom: 10px;\n  text-align: center;\n  border: 2px solid;\n  border-color: #aaaaaa #444444 #444444 #aaaaaa;\n`;\n\nclass Project extends Component {\n  render() {\n    return (\n    <Container>\n      <ProjectsImage>\n      <h3>There are several projects that i have been working on</h3\n      >\n      <Flex justify={'center'}>\n      <Detail to={'/aboutMe'}>View Details</Detail>\n      </Flex>\n      </ProjectsImage>\n    </Container>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../theme/grid';\nimport { Link } from 'react-router-dom';\n\nexport const ContactImage = styled.div`\n    height: 100vh;\n    background-image: url('${require('../assets/contact.jpg')}');\n    background-position: center center;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    justify-content: center;\n\n    text-align: center;\n    color: white;\n\n    font-size: 1em;\n\n    h1 {\n        margin-bottom: 0;\n    }\n`;\n\nclass Contact extends Component {\n  render() {\n    return (\n    <Container>\n          <ContactImage>\n            <h2>仕事のお問合せはこちらから</h2>\n            <p>Homeです</p>\n          </ContactImage>\n    </Container>\n    );\n  }\n}\n\nexport default Contact;","import 'materialize-css/dist/css/materialize.min.css';\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Container, Relative, Flex  } from '../theme/grid';\nimport AboutMe from './AboutMe';\nimport Project from './Project';\nimport Contact from './Contact';\n\n\nexport const HomeImage = styled.div`\n    height: 100vh;\n    background-image: url('${require('../assets/me.jpg')}');\n    background-position: center center;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    justify-content: center;\n\n    text-align: center;\n    color: white;\n\n    font-size: 1em;\n\n    h1 {\n        margin-bottom: 0;\n    }\n`;\n\nclass Home extends Component {\n  render() {\n    return (\n      <Container>\n          <HomeImage>\n            <h1>Lemon Tanaka</h1>\n            <h4>Welcome to my portpolio site.</h4>\n            <p>Hi, Im Lemon! Im a developer in Tokyo. </p>\n          </HomeImage>\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Div } from '../theme/grid';\nimport { white, black } from '../theme/variables';\nimport { Link } from 'react-router-dom';\n\nexport const NavigationContainer = styled(Flex)`\n    position: fixed;\n    right: 1em;\n    top: 0.9em;\n`\nexport const NewItem = styled(Link)`\n    margin-right: 20px;\n    font-size: 1.0em;\n    cursor: pointer;\n    color: ${white};\n    position: relative;\n    text-decoration: none;\n\n    &:hover {\n        color: ${black};\n        &:after {\n            content: '';\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            \n            z-index: -1;\n            transform : scale(1.3);\n        }\n    }\n`;\n\n\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n          <NewItem to={'/'}>Home</NewItem>\n          <NewItem to={'/aboutMe'}>About Me</NewItem>\n          <NewItem to={'/projects'}>Projects</NewItem>\n      </NavigationContainer>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css?family=Montserrat');\n\n    body{\n        font-family: 'Shadows Into Light', cursive;\n        font-size: 24px;\n        margin-top: 0px;\n        margin-left: 0%;\n        margin-right: 0%;\n    }\n\n    h1, h2, h3{\n    font-weight: normal;\n    }\n`","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom'\nimport AboutMe from './AboutMe';\nimport Project from './Project';\nimport Home from './Home';\nimport NavigationBar from './NavigationBar';\nimport { GlobalStyle } from '../theme/globalStyles'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <GlobalStyle />\n      <NavigationBar />\n      <Switch>\n        <Route exact path='/portfolio' component={Home} />\n        <Route path='/portfolio/aboutMe' component={AboutMe} />\n        <Route path='/portfolio/projects' component={Project} />\n      </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}